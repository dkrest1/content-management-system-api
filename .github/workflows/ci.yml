name: Content Management API CI/CD Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x] 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_SECRET_EXPIRATION: ${{ secrets.JWT_SECRET_EXPIRATION }}
          JWT_RESET_SECRET: ${{ secrets.JWT_RESET_SECRET }}
          JWT_RESET_SECRET_EXPIRATION: ${{ secrets.JWT_RESET_SECRET_EXPIRATION }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          APP_URL: ${{ secrets.APP_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get install -y awscli
          aws --version

      - name: Package Code
        run: zip -r deployment-package.zip ../../src

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name contentManagementSystem \
            --zip-file fileb://deployment-package.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
